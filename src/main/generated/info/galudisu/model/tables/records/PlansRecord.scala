/*
 * This file is generated by jOOQ.
 */
package info.galudisu.model.tables.records


import info.galudisu.model.tables.Plans

import java.lang.String
import java.sql.Timestamp

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.UpdatableRecordImpl

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.12.4"
  ),
  comments = "This class is generated by jOOQ"
)
class PlansRecord extends UpdatableRecordImpl[PlansRecord](Plans.PLANS) with Record8[String, String, String, String, Timestamp, Timestamp, Timestamp, Timestamp] {

  /**
   * Setter for <code>timetable.plans.id</code>.
   */
  def setId(value : String) : Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>timetable.plans.id</code>.
   */
  def getId : String = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>timetable.plans.teacher_id</code>.
   */
  def setTeacherId(value : String) : Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>timetable.plans.teacher_id</code>.
   */
  def getTeacherId : String = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>timetable.plans.lesson_id</code>.
   */
  def setLessonId(value : String) : Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>timetable.plans.lesson_id</code>.
   */
  def getLessonId : String = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>timetable.plans.classroom_id</code>.
   */
  def setClassroomId(value : String) : Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>timetable.plans.classroom_id</code>.
   */
  def getClassroomId : String = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>timetable.plans.start</code>.
   */
  def setStart(value : Timestamp) : Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>timetable.plans.start</code>.
   */
  def getStart : Timestamp = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[Timestamp]
  }

  /**
   * Setter for <code>timetable.plans.end</code>.
   */
  def setEnd(value : Timestamp) : Unit = {
    set(5, value)
  }

  /**
   * Getter for <code>timetable.plans.end</code>.
   */
  def getEnd : Timestamp = {
    val r = get(5)
    if (r == null) null else r.asInstanceOf[Timestamp]
  }

  /**
   * Setter for <code>timetable.plans.create_time</code>.
   */
  def setCreateTime(value : Timestamp) : Unit = {
    set(6, value)
  }

  /**
   * Getter for <code>timetable.plans.create_time</code>.
   */
  def getCreateTime : Timestamp = {
    val r = get(6)
    if (r == null) null else r.asInstanceOf[Timestamp]
  }

  /**
   * Setter for <code>timetable.plans.modify_time</code>.
   */
  def setModifyTime(value : Timestamp) : Unit = {
    set(7, value)
  }

  /**
   * Getter for <code>timetable.plans.modify_time</code>.
   */
  def getModifyTime : Timestamp = {
    val r = get(7)
    if (r == null) null else r.asInstanceOf[Timestamp]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[String] = {
    return super.key.asInstanceOf[ Record1[String] ]
  }

  // -------------------------------------------------------------------------
  // Record8 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row8[String, String, String, String, Timestamp, Timestamp, Timestamp, Timestamp] = {
    super.fieldsRow.asInstanceOf[ Row8[String, String, String, String, Timestamp, Timestamp, Timestamp, Timestamp] ]
  }

  override def valuesRow : Row8[String, String, String, String, Timestamp, Timestamp, Timestamp, Timestamp] = {
    super.valuesRow.asInstanceOf[ Row8[String, String, String, String, Timestamp, Timestamp, Timestamp, Timestamp] ]
  }
  override def field1 : Field[String] = Plans.PLANS.ID
  override def field2 : Field[String] = Plans.PLANS.TEACHER_ID
  override def field3 : Field[String] = Plans.PLANS.LESSON_ID
  override def field4 : Field[String] = Plans.PLANS.CLASSROOM_ID
  override def field5 : Field[Timestamp] = Plans.PLANS.START
  override def field6 : Field[Timestamp] = Plans.PLANS.END
  override def field7 : Field[Timestamp] = Plans.PLANS.CREATE_TIME
  override def field8 : Field[Timestamp] = Plans.PLANS.MODIFY_TIME
  override def component1 : String = getId
  override def component2 : String = getTeacherId
  override def component3 : String = getLessonId
  override def component4 : String = getClassroomId
  override def component5 : Timestamp = getStart
  override def component6 : Timestamp = getEnd
  override def component7 : Timestamp = getCreateTime
  override def component8 : Timestamp = getModifyTime
  override def value1 : String = getId
  override def value2 : String = getTeacherId
  override def value3 : String = getLessonId
  override def value4 : String = getClassroomId
  override def value5 : Timestamp = getStart
  override def value6 : Timestamp = getEnd
  override def value7 : Timestamp = getCreateTime
  override def value8 : Timestamp = getModifyTime

  override def value1(value : String) : PlansRecord = {
    setId(value)
    this
  }

  override def value2(value : String) : PlansRecord = {
    setTeacherId(value)
    this
  }

  override def value3(value : String) : PlansRecord = {
    setLessonId(value)
    this
  }

  override def value4(value : String) : PlansRecord = {
    setClassroomId(value)
    this
  }

  override def value5(value : Timestamp) : PlansRecord = {
    setStart(value)
    this
  }

  override def value6(value : Timestamp) : PlansRecord = {
    setEnd(value)
    this
  }

  override def value7(value : Timestamp) : PlansRecord = {
    setCreateTime(value)
    this
  }

  override def value8(value : Timestamp) : PlansRecord = {
    setModifyTime(value)
    this
  }

  override def values(value1 : String, value2 : String, value3 : String, value4 : String, value5 : Timestamp, value6 : Timestamp, value7 : Timestamp, value8 : Timestamp) : PlansRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this.value6(value6)
    this.value7(value7)
    this.value8(value8)
    this
  }

  /**
   * Create a detached, initialised PlansRecord
   */
  def this(id : String, teacherId : String, lessonId : String, classroomId : String, start : Timestamp, end : Timestamp, createTime : Timestamp, modifyTime : Timestamp) = {
    this()

    set(0, id)
    set(1, teacherId)
    set(2, lessonId)
    set(3, classroomId)
    set(4, start)
    set(5, end)
    set(6, createTime)
    set(7, modifyTime)
  }
}
