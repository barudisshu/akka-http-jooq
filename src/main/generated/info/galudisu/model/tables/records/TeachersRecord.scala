/*
 * This file is generated by jOOQ.
 */
package info.galudisu.model.tables.records


import info.galudisu.model.tables.Teachers

import java.lang.String
import java.sql.Timestamp

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.12.4"
  ),
  comments = "This class is generated by jOOQ"
)
class TeachersRecord extends UpdatableRecordImpl[TeachersRecord](Teachers.TEACHERS) with Record5[String, String, String, Timestamp, Timestamp] {

  /**
   * Setter for <code>timetable.teachers.id</code>.
   */
  def setId(value : String) : Unit = {
    set(0, value)
  }

  /**
   * Getter for <code>timetable.teachers.id</code>.
   */
  def getId : String = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>timetable.teachers.first_name</code>.
   */
  def setFirstName(value : String) : Unit = {
    set(1, value)
  }

  /**
   * Getter for <code>timetable.teachers.first_name</code>.
   */
  def getFirstName : String = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>timetable.teachers.last_name</code>.
   */
  def setLastName(value : String) : Unit = {
    set(2, value)
  }

  /**
   * Getter for <code>timetable.teachers.last_name</code>.
   */
  def getLastName : String = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[String]
  }

  /**
   * Setter for <code>timetable.teachers.create_time</code>.
   */
  def setCreateTime(value : Timestamp) : Unit = {
    set(3, value)
  }

  /**
   * Getter for <code>timetable.teachers.create_time</code>.
   */
  def getCreateTime : Timestamp = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[Timestamp]
  }

  /**
   * Setter for <code>timetable.teachers.modify_time</code>.
   */
  def setModifyTime(value : Timestamp) : Unit = {
    set(4, value)
  }

  /**
   * Getter for <code>timetable.teachers.modify_time</code>.
   */
  def getModifyTime : Timestamp = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[Timestamp]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[String] = {
    return super.key.asInstanceOf[ Record1[String] ]
  }

  // -------------------------------------------------------------------------
  // Record5 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row5[String, String, String, Timestamp, Timestamp] = {
    super.fieldsRow.asInstanceOf[ Row5[String, String, String, Timestamp, Timestamp] ]
  }

  override def valuesRow : Row5[String, String, String, Timestamp, Timestamp] = {
    super.valuesRow.asInstanceOf[ Row5[String, String, String, Timestamp, Timestamp] ]
  }
  override def field1 : Field[String] = Teachers.TEACHERS.ID
  override def field2 : Field[String] = Teachers.TEACHERS.FIRST_NAME
  override def field3 : Field[String] = Teachers.TEACHERS.LAST_NAME
  override def field4 : Field[Timestamp] = Teachers.TEACHERS.CREATE_TIME
  override def field5 : Field[Timestamp] = Teachers.TEACHERS.MODIFY_TIME
  override def component1 : String = getId
  override def component2 : String = getFirstName
  override def component3 : String = getLastName
  override def component4 : Timestamp = getCreateTime
  override def component5 : Timestamp = getModifyTime
  override def value1 : String = getId
  override def value2 : String = getFirstName
  override def value3 : String = getLastName
  override def value4 : Timestamp = getCreateTime
  override def value5 : Timestamp = getModifyTime

  override def value1(value : String) : TeachersRecord = {
    setId(value)
    this
  }

  override def value2(value : String) : TeachersRecord = {
    setFirstName(value)
    this
  }

  override def value3(value : String) : TeachersRecord = {
    setLastName(value)
    this
  }

  override def value4(value : Timestamp) : TeachersRecord = {
    setCreateTime(value)
    this
  }

  override def value5(value : Timestamp) : TeachersRecord = {
    setModifyTime(value)
    this
  }

  override def values(value1 : String, value2 : String, value3 : String, value4 : Timestamp, value5 : Timestamp) : TeachersRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this
  }

  /**
   * Create a detached, initialised TeachersRecord
   */
  def this(id : String, firstName : String, lastName : String, createTime : Timestamp, modifyTime : Timestamp) = {
    this()

    set(0, id)
    set(1, firstName)
    set(2, lastName)
    set(3, createTime)
    set(4, modifyTime)
  }
}
